<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>mysql管理多服务器ftp虚拟用户</title>
    <link href="/2024/08/12/mysql%E7%AE%A1%E7%90%86%E5%A4%9A%E6%9C%8D%E5%8A%A1%E5%99%A8ftp%E8%99%9A%E6%8B%9F%E7%94%A8%E6%88%B7/"/>
    <url>/2024/08/12/mysql%E7%AE%A1%E7%90%86%E5%A4%9A%E6%9C%8D%E5%8A%A1%E5%99%A8ftp%E8%99%9A%E6%8B%9F%E7%94%A8%E6%88%B7/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li><p>1.FTP虚拟用户：FTP虚拟用户由ftp服务器提供，依赖于一个服务器本地账号，可以同时设置多个虚拟账号。vsftpd分辨虚拟用户，由可插入认证模块（PAM）认证，该模块的账号信息可用文件或者数据库存储。</p><blockquote><p> FTP虚拟用户是FTP服务器的专有用户，使用虚拟用户账号可以提供集中管理的FTP根目录，方便了管理员的管理，同时将用于FTP登录的用户名、密码与系统用户账号区别开，进一步增强了FTP服务器的安全性。</p><p> 使用虚拟用户登录FTP服务器，可以避免使用操作系统帐号作为FTP用户带来的一些安全问题，也便于通过数据库或其它程序来进行管理。虚拟用户的特点是只能访问服务器为其提供的FTP服务，而不能访问系统的其它资源。</p></blockquote></li><li><p>2.数据库存储：服务器的ftp功能使用vsftpd，配合pam-mysql模块来访问数据库进行虚拟用户认证。其中数据库只负责存储用户信息。</p></li><li><p>3.基本流程：FTP用户访问-&gt;PAM配置文件（由vsftpd.conf中pam_service_name指定）-&gt;PAM认证-&gt;区别用户读取配置文件（由vsftpd.conf中user_config_dir指定配置文件路径，文件名即用户名）</p></li></ul><h2 id="1、环境"><a href="#1、环境" class="headerlink" title="1、环境"></a>1、环境</h2><p>ftp服务器x2：centos7，分ip1、ip2。需要使用pam-mysql模块<br>数据库服务器x1：mysql<br>pam-mysql模块：该模块项目较久远，支持centos6和7，不支持centos8，且centos7需要用源码编译安装，最后版本的附件如下：<br><a href="pam_mysql-0.7RC1.tar.gz">pam_mysql-0.7RC1.tar.gz</a><br>链接：<a href="https://pan.baidu.com/s/15l6M36lDJPOTspA6KXHcaw">https://pan.baidu.com/s/15l6M36lDJPOTspA6KXHcaw</a><br>提取码：njdx</p><h2 id="2、配置数据库"><a href="#2、配置数据库" class="headerlink" title="2、配置数据库"></a>2、配置数据库</h2><h3 id="1-建库和表"><a href="#1-建库和表" class="headerlink" title="1. 建库和表"></a>1. 建库和表</h3><p>新建vsftpd库，并创建users表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mysql">// 创建数据库<br>CREATE DATABASE vsftpd;<br><br>// 创建虚拟用户表<br>CREATE TABLE `users`  (<br>  `id` int(11) NOT NULL AUTO_INCREMENT,<br>  `name` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT &#x27;用户名&#x27;,<br>  `password` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT &#x27;密码，需要password函数加密&#x27;,<br>  `service_ip` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;服务器ip&#x27;,<br>  PRIMARY KEY (`id`) USING BTREE<br>) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;<br><br></code></pre></td></tr></table></figure><h3 id="2-新增虚拟用户信息"><a href="#2-新增虚拟用户信息" class="headerlink" title="2. 新增虚拟用户信息"></a>2. 新增虚拟用户信息</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">// 密码需要使用<span class="hljs-keyword">password</span>函数进行加密<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> users(<span class="hljs-type">name</span>,<span class="hljs-keyword">password</span>,service_ip) <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;test01&#x27;</span>,<span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;test&#x27;</span>),<span class="hljs-string">&#x27;服务器ip1&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> users(<span class="hljs-type">name</span>,<span class="hljs-keyword">password</span>,service_ip) <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;test02&#x27;</span>,<span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;test&#x27;</span>),<span class="hljs-string">&#x27;服务器ip2&#x27;</span>);<br></code></pre></td></tr></table></figure><h3 id="3-授权访问"><a href="#3-授权访问" class="headerlink" title="3. 授权访问"></a>3. 授权访问</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">// 创建数据库用户，并授权该用户可访问。用户名：vsftpd，密码：<span class="hljs-number">123456</span><br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">SELECT</span>,<span class="hljs-keyword">INSERT</span>,<span class="hljs-keyword">UPDATE</span> <span class="hljs-keyword">ON</span> vsftpd.* <span class="hljs-keyword">TO</span> vsftpd@<span class="hljs-string">&#x27;%&#x27;</span>  IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br><br>// 也可以限制使用的ip网段，例如<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">SELECT</span>,<span class="hljs-keyword">INSERT</span>,<span class="hljs-keyword">UPDATE</span> <span class="hljs-keyword">ON</span> vsftpd.* <span class="hljs-keyword">TO</span> vsftpd@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span>  IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br><br></code></pre></td></tr></table></figure><h2 id="3、安装pam-mysql模块"><a href="#3、安装pam-mysql模块" class="headerlink" title="3、安装pam-mysql模块"></a>3、安装pam-mysql模块</h2><h3 id="1-安装对应的依赖"><a href="#1-安装对应的依赖" class="headerlink" title="1.安装对应的依赖"></a>1.安装对应的依赖</h3><p>安装对应的依赖：<br><code>yum install vsftpd gcc gcc-c++ make mariadb-devel  pam-devel -y</code></p><h3 id="2-ftp服务器下载pam-mysql模块"><a href="#2-ftp服务器下载pam-mysql模块" class="headerlink" title="2.ftp服务器下载pam-mysql模块"></a>2.ftp服务器下载pam-mysql模块</h3><p><code>wget http://prdownloads.sourceforge.net/pam-mysql/pam_mysql-0.7RC1.tar.gz</code></p><h3 id="3-解压并进入对应目录"><a href="#3-解压并进入对应目录" class="headerlink" title="3.解压并进入对应目录"></a>3.解压并进入对应目录</h3><p><code>tar xvf pam_mysql-0.7RC1.tar.gz &amp;&amp; cd pam_mysql-0.7RC1/</code></p><h3 id="4-编译"><a href="#4-编译" class="headerlink" title="4. 编译"></a>4. 编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 设置编译参数</span><br>./configure --with-pam-mods-dir=/lib64/security<br><br><span class="hljs-comment"># 编译</span><br>make install<br><br><span class="hljs-comment"># 查看是否成功生成对应模块</span><br>ll /lib64/security/pam_mysql*<br><br><span class="hljs-comment">## 结果应包含如下文件：</span><br><span class="hljs-comment"># /lib64/security/pam_mysql.la</span><br><span class="hljs-comment">#  /lib64/security/pam_mysql.so</span><br></code></pre></td></tr></table></figure><h3 id="5-设置pam-mysql认证配置"><a href="#5-设置pam-mysql认证配置" class="headerlink" title="5.设置pam_mysql认证配置"></a>5.设置pam_mysql认证配置</h3><p>新建文件<code>/etc/pam.d/vsftpd.mysql</code>，在其中设置以下内容：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">auth required pam_mysql.so <span class="hljs-attribute">user</span>=vsftpd <span class="hljs-attribute">passwd</span>=123456 <span class="hljs-attribute">host</span>=数据库ip <span class="hljs-attribute">db</span>=vsftpd <span class="hljs-attribute">table</span>=users <span class="hljs-attribute">usercolumn</span>=name <span class="hljs-attribute">passwdcolumn</span>=password <span class="hljs-attribute">where</span>=`service_ip`=&#x27;当前服务器ip&#x27; <span class="hljs-attribute">crypt</span>=2<br>account required pam_mysql.so <span class="hljs-attribute">user</span>=vsftpd <span class="hljs-attribute">passwd</span>=123456 <span class="hljs-attribute">host</span>=数据库ip <span class="hljs-attribute">db</span>=vsftpd <span class="hljs-attribute">table</span>=users <span class="hljs-attribute">usercolumn</span>=name <span class="hljs-attribute">passwdcolumn</span>=password <span class="hljs-attribute">where</span>=`service_ip`=&#x27;当前服务器ip&#x27; <span class="hljs-attribute">crypt</span>=2<br><br></code></pre></td></tr></table></figure><h2 id="4、设置vsftpd的ftp虚拟用户"><a href="#4、设置vsftpd的ftp虚拟用户" class="headerlink" title="4、设置vsftpd的ftp虚拟用户"></a>4、设置vsftpd的ftp虚拟用户</h2><h3 id="1-ftp服务器安装vsftpd"><a href="#1-ftp服务器安装vsftpd" class="headerlink" title="1. ftp服务器安装vsftpd"></a>1. ftp服务器安装vsftpd</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> vsftpd<br></code></pre></td></tr></table></figure><h3 id="2-设置vsftpd支持虚拟用户"><a href="#2-设置vsftpd支持虚拟用户" class="headerlink" title="2.设置vsftpd支持虚拟用户"></a>2.设置vsftpd支持虚拟用户</h3><ol><li><p>复制一份vsftpd设置文件做备份：<code>/etc/vsftpd/vsftpd.conf</code></p></li><li><p>然后修改以下设置：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># 关闭匿名登录</span><br><span class="hljs-attr">anonymous_enable</span>=<span class="hljs-literal">NO</span><br><br><span class="hljs-comment"># 锁定本地用户在主目录，不允许切换到上一级目录中</span><br><span class="hljs-attr">chroot_local_user</span>=<span class="hljs-literal">YES</span><br><br><span class="hljs-comment"># 将pam文件指定为vsftpd.mysql，不启用原设置</span><br><span class="hljs-attr">pam_service_name</span>=vsftpd.mysql<br><br></code></pre></td></tr></table></figure></li><li><p>然后新增以下设置：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># 允许禁锢的FTP根目录可写</span><br><span class="hljs-attr">allow_writeable_chroot</span>=<span class="hljs-literal">YES</span><br><br><span class="hljs-comment"># 将虚拟用户映射为本地vuser用户（前提是local_enable=YES）</span><br><span class="hljs-attr">guest_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attr">guest_username</span>=vuser<br><br><span class="hljs-comment"># 设置虚拟用户使用的配置文件目录</span><br><span class="hljs-attr">user_config_dir</span>=/etc/vsftpd/vusers.d/<br><br><span class="hljs-comment"># 这个参数表示虚拟用户和本地用户有相同的权限，可不设置</span><br><span class="hljs-comment"># virtual_use_local_privs=YES</span><br></code></pre></td></tr></table></figure></li><li><p><strong>重启vsftpd服务</strong>：<code>service vsftpd restart</code></p></li><li><p>设置每个虚拟用户的权限与目录</p><ol><li>在&#x2F;etc&#x2F;vsftpd&#x2F;vusers.d目录下新建虚拟用户配置文件。例如test01的用户，对应配置文件：<code>/etc/vsftpd/vusers.d/test01</code></li><li>在test01文件内配置对应权限： <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#设定允许写操作</span><br><span class="hljs-regexp">//</span> write_enable=YES<br><br><span class="hljs-comment">#设定权限:可以上传文件</span><br><span class="hljs-regexp">//</span>anon_upload_enable=YES<br><br><span class="hljs-comment">#设定权限:不能新建目录</span><br><span class="hljs-regexp">//</span>anon_mkdir_write_enable=NO<br><br><span class="hljs-comment">#设定权限:不能删除/重命名文件</span><br><span class="hljs-regexp">//</span>anon_other_write_enable=NO<br><br><span class="hljs-comment">#设定权限:可以浏览目录下的文件</span><br><span class="hljs-regexp">//</span> anon_world_readable_only=NO<br><br><span class="hljs-comment">#设定上传文件权限掩码，022对应：新建的目录权限是755，文件的权限是 644</span><br><span class="hljs-regexp">//</span> anon_umask=<span class="hljs-number">022</span><br><br><span class="hljs-comment">#指定虚拟用户的具体主路径</span><br><span class="hljs-regexp">//</span> local_root=<span class="hljs-regexp">/var/</span>ftp<span class="hljs-regexp">/virtual/u</span>sername<br><br><span class="hljs-comment">#设定空闲连接超时时间</span><br><span class="hljs-regexp">//</span> idle_session_timeout=<span class="hljs-number">600</span><br><br><span class="hljs-comment">#设定单次连续传输最大时间</span><br><span class="hljs-regexp">//</span> data_connection_timeout=<span class="hljs-number">120</span><br><br><span class="hljs-comment">#设定并发客户端访问个数</span><br><span class="hljs-regexp">//</span> max_clients=<span class="hljs-number">10</span><br><br><span class="hljs-comment">#设定单个客户端的最大线程数，这个配置主要来照顾Flashget、迅雷等多线程下载软件</span><br><span class="hljs-regexp">//</span> max_per_ip=<span class="hljs-number">5</span><br><br><span class="hljs-comment">#设定该用户的最大传输速率，单位b/s&quot; &gt;&gt; /etc/vsftpd/vconf/vconf.tmp</span><br><span class="hljs-regexp">//</span> <span class="hljs-comment">#local_max_rate=50000</span><br><br><br></code></pre></td></tr></table></figure></li></ol></li></ol><h2 id="5、测试"><a href="#5、测试" class="headerlink" title="5、测试"></a>5、测试</h2><p>如果有遇到登录失败的情况，可以看下登录日志文件<code>/var/log/secure</code></p><h2 id="7、步骤脚本包"><a href="#7、步骤脚本包" class="headerlink" title="7、步骤脚本包"></a>7、步骤脚本包</h2><p>在自己尝试过程中，将以上步骤整理成脚本和配置文件，内含说明，有需要可取用。<strong>建议先自己实践过1-4步骤后，再使用脚本包的文件，便于理解和根据需要调整</strong><br><a href="https://pan.baidu.com/s/1e3j4NVPvUsPsfw2sUIAbmw">百度链接</a> 提取码: 6mai</p><img src="/2024/08/12/mysql%E7%AE%A1%E7%90%86%E5%A4%9A%E6%9C%8D%E5%8A%A1%E5%99%A8ftp%E8%99%9A%E6%8B%9F%E7%94%A8%E6%88%B7/img1.png" class="" title="img1"><img src="/2024/08/12/mysql%E7%AE%A1%E7%90%86%E5%A4%9A%E6%9C%8D%E5%8A%A1%E5%99%A8ftp%E8%99%9A%E6%8B%9F%E7%94%A8%E6%88%B7/img2.png" class="" title="img2"><h2 id="6、参考引用"><a href="#6、参考引用" class="headerlink" title="6、参考引用"></a>6、参考引用</h2><p>mysql管理ftp账号设置1：<a href="https://blog.51cto.com/johnnyfang/5213966">https://blog.51cto.com/johnnyfang/5213966</a><br>mysql管理ftp账号设置2：<a href="https://www.cnblogs.com/lvzhenjiang/p/14406450.html">https://www.cnblogs.com/lvzhenjiang/p/14406450.html</a><br>ftp账号理解：<a href="https://cloud.tencent.com/developer/article/1025979">https://cloud.tencent.com/developer/article/1025979</a><br>vsftpd选项设置：<a href="https://developer.aliyun.com/article/294506">https://developer.aliyun.com/article/294506</a><br>vsftpd选项设置说明和自动化脚本：<a href="https://www.cnblogs.com/UG9527/p/11409703.html">https://www.cnblogs.com/UG9527/p/11409703.html</a><br>pam-mysql原github：<a href="https://github.com/NigelCunningham/pam-MySQL">https://github.com/NigelCunningham/pam-MySQL</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>恢复mysql数据</title>
    <link href="/2024/08/12/%E6%81%A2%E5%A4%8Dmysql%E6%95%B0%E6%8D%AE/"/>
    <url>/2024/08/12/%E6%81%A2%E5%A4%8Dmysql%E6%95%B0%E6%8D%AE/</url>
    
    <content type="html"><![CDATA[<h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h3><p>⭐️当mysql意外无法正常运行，但是保留了frm和ibd文件时，往往还是能通过这两种文件进行数据恢复的。<br>⭐️这两个文件的位置一般在<code>/usr/local/mysql/data/dbname/</code>或<code>/var/lib/mysql/dbname/</code>目录下。<br>⭐️如果以上两个都不适用，也通过命令查找mysql相关目录，再进行逐一查找，例如<br><code>whereis mysql</code></p><h3 id="2-恢复表结构"><a href="#2-恢复表结构" class="headerlink" title="2 恢复表结构"></a>2 恢复表结构</h3><h4 id="2-1-环境和工具"><a href="#2-1-环境和工具" class="headerlink" title="2.1 环境和工具"></a>2.1 环境和工具</h4><p>系统环境：linux<br>当前目录：&#x2F;var&#x2F;test&#x2F;下<br>待恢复的表结构文件：在 &#x2F;var&#x2F;test&#x2F;mysql&#x2F;testdb&#x2F; 下的所有frm文件<br>待恢复的表数据文件：在 &#x2F;var&#x2F;test&#x2F;mysql&#x2F;testdb&#x2F; 下的所有ibd文件<br>还原表结构工具：dbsake</p><h4 id="2-2-下载"><a href="#2-2-下载" class="headerlink" title="2.2 下载"></a>2.2 下载</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">curl -s <span class="hljs-keyword">http</span>://<span class="hljs-built_in">get</span>.dbsake.net &gt; dbsake<br></code></pre></td></tr></table></figure><h4 id="2-3-赋权"><a href="#2-3-赋权" class="headerlink" title="2.3 赋权"></a>2.3 赋权</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> u+x dbsake  <br></code></pre></td></tr></table></figure><h4 id="2-4-批量读取-表结构"><a href="#2-4-批量读取-表结构" class="headerlink" title="2.4 批量读取 表结构"></a>2.4 批量读取 表结构</h4><p>生成创建表结构sql语句 至文件 <code>/var/test/mysql/rev/rev.sql</code></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs groovy">sudo .<span class="hljs-regexp">/dbsake frmdump /</span><span class="hljs-keyword">var</span><span class="hljs-regexp">/test/</span>mysql<span class="hljs-regexp">/testdb/</span>*.frm &gt; <span class="hljs-regexp">/var/</span>test<span class="hljs-regexp">/mysql/</span>rev/rev.sql<br></code></pre></td></tr></table></figure><p>利用mysql可视化工具导入sql文件，因为表结构和数据库版本问题，导入时可能会遇到问题，需要根据报错信息调整sql文件，以下为常见问题</p><h4 id="2-5-常见导入问题"><a href="#2-5-常见导入问题" class="headerlink" title="2.5 常见导入问题"></a>2.5 常见导入问题</h4><ul><li>字段类型为timestamp、不为空 时，必须有默认值。<br>  默认值需要是大于等于<code>1970-00-00 08:00:02</code>的标准时间格式（其他文章看到是1970-00-00 00:00:01，但是本地测试结果为需要多加八小时左右，可能会根据区时有所不同）</li><li>两个字段同时设置为timestamp、可为空、无默认值 时，可能会报错。建议至少其中一个设置默认值。</li></ul><h3 id="3-恢复表数据"><a href="#3-恢复表数据" class="headerlink" title="3 恢复表数据"></a>3 恢复表数据</h3><h4 id="3-1-删除新建表的表空间（mysql命令模式）"><a href="#3-1-删除新建表的表空间（mysql命令模式）" class="headerlink" title="3.1 删除新建表的表空间（mysql命令模式）"></a>3.1 删除新建表的表空间（mysql命令模式）</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> tb_name <span class="hljs-keyword">DISCARD</span> <span class="hljs-keyword">TABLESPACE</span>;<br></code></pre></td></tr></table></figure><h4 id="3-2-复制表空间并授权"><a href="#3-2-复制表空间并授权" class="headerlink" title="3.2 复制表空间并授权"></a>3.2 复制表空间并授权</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cp</span> <span class="hljs-keyword">tags</span>.ibd /var/lib/mysql/<span class="hljs-symbol">&lt;database_name&gt;</span> <br><span class="hljs-keyword">cd</span> /var/lib/mysql/<span class="hljs-symbol">&lt;database_name&gt;</span><br>chown mysq<span class="hljs-variable">l:mysql</span> <span class="hljs-keyword">tags</span>.ibd<br></code></pre></td></tr></table></figure><p>批量赋权可以参考以下命令：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 在复制好的ibd文件目录下执行</span><br><span class="hljs-attribute">chown</span> mysql:mysql <span class="hljs-regexp">*.ibd</span><br></code></pre></td></tr></table></figure><h4 id="3-3-关联表空间（mysql命令模式）"><a href="#3-3-关联表空间（mysql命令模式）" class="headerlink" title="3.3 关联表空间（mysql命令模式）"></a>3.3 关联表空间（mysql命令模式）</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> tb_name <span class="hljs-keyword">IMPORT</span> <span class="hljs-keyword">TABLESPACE</span>;<br></code></pre></td></tr></table></figure><h4 id="3-4-可能问题"><a href="#3-4-可能问题" class="headerlink" title="3.4 可能问题"></a>3.4 可能问题</h4><p>如果关联时遇报错：</p><blockquote><p>Schema mismatch (Table has ROW_TYPE_DYNAMIC row format, .ibd file has ROW_TYPE_COMPACT row format.)</p></blockquote><p>说明表行类型不一致，需要修改成后面的类型。<br>以以上报错为例，需要修改成COMPACT，则对应的修改语句如下（<em>该语句执行后可能会删除复制的idb文件，如果删除了请重新从3.2开始执行步骤</em>）<br><code>ALTER TABLE tb_name ROW_FORMAT=COMPACT; </code></p><h4 id="3-5-批量处理"><a href="#3-5-批量处理" class="headerlink" title="3.5 批量处理"></a>3.5 批量处理</h4><p>在数据表不多的情况下，按照3.1-3.4流程处理可行，但是如果表格上百张，就不太现实。所以写了生成批量表格3.1、3.3、3.4步骤的sql文件的代码，实现原理也很简单，主要就是拼接sql并写入到文件中。<br>php代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">// 获取ibd文件目录</span><br><span class="hljs-variable">$list</span> = <span class="hljs-title function_ invoke__">glob</span>(<span class="hljs-string">&#x27;C:\Users\Administrator.DESKTOP-4PF1LET\Desktop\dbname\*.ibd&#x27;</span>);<br><br><span class="hljs-comment">// 生成数据库恢复文件语句</span><br><span class="hljs-variable">$fileContent1</span> = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$fileContent2</span> = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$fileContent3</span> = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$list</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$table</span>) &#123;<br>    <span class="hljs-variable">$table_name</span> = <span class="hljs-title function_ invoke__">pathinfo</span>(<span class="hljs-variable">$table</span>, PATHINFO_FILENAME);<br>    <span class="hljs-variable">$fileContent1</span> .= <span class="hljs-string">&#x27; -- 删除表空间：&#x27;</span> . <span class="hljs-variable">$table_name</span> . PHP_EOL;<br>    <span class="hljs-variable">$fileContent1</span> .= <span class="hljs-string">&quot;ALTER TABLE `<span class="hljs-subst">&#123;$table_name&#125;</span>` DISCARD TABLESPACE;&quot;</span> . PHP_EOL . PHP_EOL;<br><br>    <span class="hljs-variable">$fileContent2</span> .= <span class="hljs-string">&#x27; -- 修改表行类型：&#x27;</span> . <span class="hljs-variable">$table_name</span> . PHP_EOL;<br>    <span class="hljs-variable">$fileContent2</span> .= <span class="hljs-string">&quot;ALTER TABLE `<span class="hljs-subst">&#123;$table_name&#125;</span>` ROW_FORMAT = COMPACT;&quot;</span> . PHP_EOL . PHP_EOL;<br><br>    <span class="hljs-variable">$fileContent3</span> .= <span class="hljs-string">&#x27; -- 关联表空间：&#x27;</span> . <span class="hljs-variable">$table_name</span> . PHP_EOL;<br>    <span class="hljs-variable">$fileContent3</span> .= <span class="hljs-string">&quot;ALTER TABLE `<span class="hljs-subst">&#123;$table_name&#125;</span>` IMPORT TABLESPACE;&quot;</span> . PHP_EOL;<br>&#125;<br><br><span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-keyword">__DIR__</span> . <span class="hljs-string">&#x27;/del.sql&#x27;</span>, <span class="hljs-variable">$fileContent1</span>);<br><span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-keyword">__DIR__</span> . <span class="hljs-string">&#x27;/alter.sql&#x27;</span>, <span class="hljs-variable">$fileContent2</span>);<br><span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-keyword">__DIR__</span> . <span class="hljs-string">&#x27;/import.sql&#x27;</span>, <span class="hljs-variable">$fileContent3</span>);<br><br></code></pre></td></tr></table></figure><h3 id="4-参考"><a href="#4-参考" class="headerlink" title="4 参考"></a>4 参考</h3><p><a href="https://blog.csdn.net/xiaojin21cen/article/details/103971628">https://blog.csdn.net/xiaojin21cen/article/details/103971628</a><br><a href="https://mp.weixin.qq.com/s/6BM22N6FfmhsWYWEJfJO9w">https://mp.weixin.qq.com/s/6BM22N6FfmhsWYWEJfJO9w</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VSFTPD创建ftp账号</title>
    <link href="/2024/08/12/VSFTPD%E5%88%9B%E5%BB%BAftp%E8%B4%A6%E5%8F%B7/"/>
    <url>/2024/08/12/VSFTPD%E5%88%9B%E5%BB%BAftp%E8%B4%A6%E5%8F%B7/</url>
    
    <content type="html"><![CDATA[<h3 id="安装与卸载"><a href="#安装与卸载" class="headerlink" title="安装与卸载"></a>安装与卸载</h3><p>查询本机是否已经安装vsftp</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">rpm -<span class="hljs-keyword">qa</span>|<span class="hljs-keyword">grep</span> vsftpd<br></code></pre></td></tr></table></figure><p>卸载命令</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">rpm -e vsftpd</span><br></code></pre></td></tr></table></figure><p>安装命令</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> vsftpd<br></code></pre></td></tr></table></figure><p>启动</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> vsftpd.service<br></code></pre></td></tr></table></figure><p>设置开机启动 </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">systemctl <span class="hljs-built_in">enable</span> vsftpd.service<br></code></pre></td></tr></table></figure><p>查看服务状态和端口（默认端口是21）</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">systemctl status vsftpd.service <br>netstat <span class="hljs-punctuation">-</span>nltp <span class="hljs-string">| grep 21</span><br></code></pre></td></tr></table></figure><p>默认安装完成后：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 主要配置文件,修改前最好先备份一份</span><br><span class="hljs-regexp">/etc/</span>vsftpd/vsftpd.conf<br><br><span class="hljs-comment"># 禁止访问ftp服务器的用户列表，一行一个账号（黑名单）</span><br><span class="hljs-regexp">/etc/</span>vsftpd/ftpusers<br><br><span class="hljs-comment"># 用户访问控制文件，一行一个账号（白名单）</span><br><span class="hljs-regexp">/etc/</span>vsftpd/user_list<br></code></pre></td></tr></table></figure><h3 id="常见配置说明"><a href="#常见配置说明" class="headerlink" title="常见配置说明"></a>常见配置说明</h3><p>常见配置说明</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ini"><br><span class="hljs-comment"># 是否开启匿名登录功能</span><br><span class="hljs-comment"># 用户可使用用户名ftp或anonymous进行ftp登录，口令为用户的E-mail地址。</span><br><span class="hljs-attr">anonymous_enable</span>=<span class="hljs-literal">NO</span><br><br><span class="hljs-comment"># 限制访问自身目录</span><br><span class="hljs-attr">chroot_list_enable</span>=<span class="hljs-literal">YES</span><br><br><span class="hljs-comment"># chroot_filelist文件，将访问自身目录受限制的用户添加进去，每行一个用户</span><br><span class="hljs-attr">chroot_list_file</span>=/etc/vsftpd/chroot_list<br><br></code></pre></td></tr></table></figure><h3 id="设置ftp账号"><a href="#设置ftp账号" class="headerlink" title="设置ftp账号"></a>设置ftp账号</h3><p>直接参考阿里云配置ftp官方文档，排版和逻辑都比较清晰</p><ul><li><a href="https://help.aliyun.com/document_detail/60152.html">https://help.aliyun.com/document_detail/60152.html</a></li></ul><h3 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h3><p>阿里云配置ftp官方文档</p><ul><li><a href="https://help.aliyun.com/document_detail/60152.html">https://help.aliyun.com/document_detail/60152.html</a></li></ul><p>ftp多目录多用户参考</p><ul><li><a href="https://developer.aliyun.com/article/691201">https://developer.aliyun.com/article/691201</a></li><li><a href="https://blog.csdn.net/yuhengyue/article/details/107461768">https://blog.csdn.net/yuhengyue/article/details/107461768</a></li></ul><p>其他参考</p><ul><li><a href="https://blog.csdn.net/aiynmimi/article/details/77012507">https://blog.csdn.net/aiynmimi/article/details/77012507</a></li><li><a href="https://blog.csdn.net/yuezhilangniao/article/details/120556709">https://blog.csdn.net/yuezhilangniao/article/details/120556709</a></li><li><a href="https://blog.51cto.com/meiling/2622016">https://blog.51cto.com/meiling/2622016</a></li><li><a href="https://blog.csdn.net/firewolf1758/article/details/73822082">https://blog.csdn.net/firewolf1758/article/details/73822082</a></li><li><a href="https://www.cnblogs.com/howhy/p/6889808.html">https://www.cnblogs.com/howhy/p/6889808.html</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客搭建小记</title>
    <link href="/2024/07/26/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%B0%8F%E8%AE%B0/"/>
    <url>/2024/07/26/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%B0%8F%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<!--more--><!-- [TOC] --><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>   搭建博客的原因参见：菜单栏“关于”</p><h1 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h1><p>本机运行正常，部署到github后样式丢失，排查与解决过程：</p><ol><li>线上f12发现控制台有爆红，显示关键错误信息：<code>SyntaxError: Unexpected token &#39;&lt;</code>，后面几个都是这个报错</li><li>点击报错进入资源页面。资源页面显示名称的是（index），原本应该是个js，点开内容却是首页的html内容</li><li>怀疑是<strong>路径错误</strong>。找不到对应js于是自动返回默认的首页，html不是js，肯定会报错</li><li>核实首页index.html的js引入路径，发现是<code>/我在_config.yml的url中的二级目录名/js/xxx.js</code>。我github博客地址是很早以前配置的，当时带了二级目录，现在实际地址栏已没有二级目录，所以导致js路径错误，需要修改为<code>/js/xxx.js</code></li><li>解决方式：修正部署博客仓库的Website设置，调整到只有一级目录。修改_config.yml的url配置，去掉二级目录名，和Website保持一致。</li><li>总结：<strong>博客实际部署后的路径、hexo的yml路径需要一致</strong></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>blog</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
